var cov_esfr2ifxq=function(){var path='/Users/andeladeveloper/Documents/Projects/thorin-cfh/server.js',hash='3e091898a947ee9009903f3a32d616e42d10c4fa',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/andeladeveloper/Documents/Projects/thorin-cfh/server.js',statementMap:{'0':{start:{line:4,column:14},end:{line:4,column:32}},'1':{start:{line:5,column:9},end:{line:5,column:22}},'2':{start:{line:6,column:15},end:{line:6,column:34}},'3':{start:{line:7,column:13},end:{line:7,column:35}},'4':{start:{line:8,column:9},end:{line:8,column:29}},'5':{start:{line:17,column:10},end:{line:17,column:70}},'6':{start:{line:18,column:13},end:{line:18,column:39}},'7':{start:{line:19,column:11},end:{line:19,column:56}},'8':{start:{line:20,column:15},end:{line:20,column:34}},'9':{start:{line:23,column:9},end:{line:23,column:36}},'10':{start:{line:26,column:18},end:{line:26,column:43}},'11':{start:{line:27,column:11},end:{line:39,column:1}},'12':{start:{line:28,column:4},end:{line:38,column:7}},'13':{start:{line:29,column:22},end:{line:29,column:39}},'14':{start:{line:30,column:19},end:{line:30,column:39}},'15':{start:{line:31,column:8},end:{line:37,column:9}},'16':{start:{line:32,column:12},end:{line:34,column:13}},'17':{start:{line:33,column:16},end:{line:33,column:33}},'18':{start:{line:35,column:15},end:{line:37,column:9}},'19':{start:{line:36,column:12},end:{line:36,column:26}},'20':{start:{line:40,column:0},end:{line:40,column:18}},'21':{start:{line:43,column:0},end:{line:43,column:39}},'22':{start:{line:45,column:10},end:{line:45,column:19}},'23':{start:{line:47,column:0},end:{line:49,column:3}},'24':{start:{line:48,column:4},end:{line:48,column:11}},'25':{start:{line:52,column:0},end:{line:52,column:53}},'26':{start:{line:55,column:0},end:{line:55,column:48}},'27':{start:{line:58,column:11},end:{line:58,column:22}},'28':{start:{line:59,column:13},end:{line:59,column:29}},'29':{start:{line:60,column:12},end:{line:60,column:45}},'30':{start:{line:62,column:0},end:{line:62,column:41}},'31':{start:{line:63,column:0},end:{line:63,column:51}},'32':{start:{line:66,column:0},end:{line:66,column:37}},'33':{start:{line:69,column:0},end:{line:69,column:31}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:27,column:11},end:{line:27,column:12}},loc:{start:{line:27,column:26},end:{line:39,column:1}},line:27},'1':{name:'(anonymous_1)',decl:{start:{line:28,column:33},end:{line:28,column:34}},loc:{start:{line:28,column:48},end:{line:38,column:5}},line:28},'2':{name:'(anonymous_2)',decl:{start:{line:47,column:8},end:{line:47,column:9}},loc:{start:{line:47,column:32},end:{line:49,column:1}},line:47}},branchMap:{'0':{loc:{start:{line:17,column:33},end:{line:17,column:70}},type:'binary-expr',locations:[{start:{line:17,column:33},end:{line:17,column:53}},{start:{line:17,column:57},end:{line:17,column:70}}],line:17},'1':{loc:{start:{line:31,column:8},end:{line:37,column:9}},type:'if',locations:[{start:{line:31,column:8},end:{line:37,column:9}},{start:{line:31,column:8},end:{line:37,column:9}}],line:31},'2':{loc:{start:{line:32,column:12},end:{line:34,column:13}},type:'if',locations:[{start:{line:32,column:12},end:{line:34,column:13}},{start:{line:32,column:12},end:{line:34,column:13}}],line:32},'3':{loc:{start:{line:35,column:15},end:{line:37,column:9}},type:'if',locations:[{start:{line:35,column:15},end:{line:37,column:9}},{start:{line:35,column:15},end:{line:37,column:9}}],line:35}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Module dependencies.
 */var express=(cov_esfr2ifxq.s[0]++,require('express')),fs=(cov_esfr2ifxq.s[1]++,require('fs')),passport=(cov_esfr2ifxq.s[2]++,require('passport')),logger=(cov_esfr2ifxq.s[3]++,require('mean-logger')),io=(cov_esfr2ifxq.s[4]++,require('socket.io'));/**
 * Main application entry file.
 * Please note that the order of loading is important.
 *///Load configurations
//if test env, load example file
var env=(cov_esfr2ifxq.s[5]++,process.env.NODE_ENV=(cov_esfr2ifxq.b[0][0]++,process.env.NODE_ENV)||(cov_esfr2ifxq.b[0][1]++,'development')),config=(cov_esfr2ifxq.s[6]++,require('./config/config')),auth=(cov_esfr2ifxq.s[7]++,require('./config/middlewares/authorization')),mongoose=(cov_esfr2ifxq.s[8]++,require('mongoose'));//Bootstrap db connection
var db=(cov_esfr2ifxq.s[9]++,mongoose.connect(config.db));//Bootstrap models
var models_path=(cov_esfr2ifxq.s[10]++,__dirname+'/app/models');cov_esfr2ifxq.s[11]++;var walk=function(path){cov_esfr2ifxq.f[0]++;cov_esfr2ifxq.s[12]++;fs.readdirSync(path).forEach(function(file){cov_esfr2ifxq.f[1]++;var newPath=(cov_esfr2ifxq.s[13]++,path+'/'+file);var stat=(cov_esfr2ifxq.s[14]++,fs.statSync(newPath));cov_esfr2ifxq.s[15]++;if(stat.isFile()){cov_esfr2ifxq.b[1][0]++;cov_esfr2ifxq.s[16]++;if(/(.*)\.(js|coffee)/.test(file)){cov_esfr2ifxq.b[2][0]++;cov_esfr2ifxq.s[17]++;require(newPath);}else{cov_esfr2ifxq.b[2][1]++;}}else{cov_esfr2ifxq.b[1][1]++;cov_esfr2ifxq.s[18]++;if(stat.isDirectory()){cov_esfr2ifxq.b[3][0]++;cov_esfr2ifxq.s[19]++;walk(newPath);}else{cov_esfr2ifxq.b[3][1]++;}}});};cov_esfr2ifxq.s[20]++;walk(models_path);//bootstrap passport config
cov_esfr2ifxq.s[21]++;require('./config/passport')(passport);var app=(cov_esfr2ifxq.s[22]++,express());cov_esfr2ifxq.s[23]++;app.use(function(req,res,next){cov_esfr2ifxq.f[2]++;cov_esfr2ifxq.s[24]++;next();});//express settings
cov_esfr2ifxq.s[25]++;require('./config/express')(app,passport,mongoose);//Bootstrap routes
cov_esfr2ifxq.s[26]++;require('./config/routes')(app,passport,auth);//Start the app by listening on <port>
var port=(cov_esfr2ifxq.s[27]++,config.port);var server=(cov_esfr2ifxq.s[28]++,app.listen(port));var ioObj=(cov_esfr2ifxq.s[29]++,io.listen(server,{log:false}));//game logic handled here
cov_esfr2ifxq.s[30]++;require('./config/socket/socket')(ioObj);cov_esfr2ifxq.s[31]++;console.log('Express app started on port '+port);//Initializing logger
cov_esfr2ifxq.s[32]++;logger.init(app,passport,mongoose);//expose app
cov_esfr2ifxq.s[33]++;exports=module.exports=app;